{"ast":null,"code":"var _jsxFileName = \"E:\\\\Courses\\\\DEPI\\\\Technical\\\\Project\\\\Template\\\\src\\\\pages\\\\ModelDetailPage.tsx\",\n  _s = $RefreshSig$();\n// src/pages/PredictionPage.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport apiClient from '../api/apiClient.ts'; // Make sure extension is included if needed\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PredictionPage = () => {\n  _s();\n  const {\n    modelId\n  } = useParams();\n  const [model, setModel] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [predicting, setPredicting] = useState(false);\n  const [error, setError] = useState(null);\n\n  // State for inputs\n  const [file, setFile] = useState(null);\n  const [text, setText] = useState('');\n  // Initialize features state as an empty object\n  const [features, setFeatures] = useState({});\n  // Initialize featureKeys state as empty array - will be populated from API\n  const [featureKeys, setFeatureKeys] = useState([]);\n  const [result, setResult] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  useEffect(() => {\n    const fetchModelDetails = async () => {\n      if (!modelId) return;\n      try {\n        setLoading(true);\n        setError(null); // Clear previous errors\n        setResult(null); // Clear previous results\n        const data = await apiClient.getModelDetails(modelId); // Fetch model details\n        setModel(data);\n\n        // --- UPDATED LOGIC ---\n        // If it's a tabular model and expected_features are provided by API, use them\n        if (data.input_type === 'tabular' && data.expected_features && data.expected_features.length > 0) {\n          setFeatureKeys(data.expected_features); // Set keys from API response\n          // Initialize features state with empty strings for the expected keys\n          const initialFeatures = {};\n          data.expected_features.forEach(key => {\n            initialFeatures[key] = ''; // Default to empty string\n          });\n          setFeatures(initialFeatures);\n        } else if (data.input_type === 'tabular') {\n          // Handle case where backend *doesn't* send features for a tabular model\n          console.warn(\"Tabular model details received without expected_features list.\");\n          setError(\"Model details are incomplete. Cannot display feature inputs.\");\n          setFeatureKeys([]); // Ensure no fields are rendered\n          setFeatures({});\n        } else {\n          // Reset for non-tabular models\n          setFeatureKeys([]);\n          setFeatures({});\n        }\n        // --- END UPDATE ---\n      } catch (err) {\n        setError('Failed to fetch model details. Please try again later.');\n        console.error('Error fetching model details:', err);\n        setModel(null); // Ensure model is null on error\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchModelDetails();\n  }, [modelId]); // Re-run effect when modelId changes\n\n  const handleFileChange = e => {\n    var _e$target$files;\n    const selectedFile = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setResult(null); // Clear previous results\n      if (selectedFile.type.startsWith('image/')) {\n        const url = URL.createObjectURL(selectedFile);\n        setPreviewUrl(url);\n        // Clean up the object URL when the component unmounts or file changes\n        return () => URL.revokeObjectURL(url);\n      } else {\n        setPreviewUrl(null);\n      }\n    }\n  };\n  const handleTextChange = e => {\n    setText(e.target.value);\n    setResult(null); // Clear previous results\n  };\n\n  // Updated handler for tabular features\n  const handleFeatureChange = (key, value) => {\n    setFeatures(prev => ({\n      ...prev,\n      [key]: value // Keep as string initially, backend will handle conversion if needed\n    }));\n    setResult(null); // Clear previous results\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!model || !modelId) return;\n\n    // Basic validation check\n    if (model.input_type === 'tabular') {\n      const missingFeatures = featureKeys.filter(key => features[key] === undefined || features[key] === '');\n      if (missingFeatures.length > 0) {\n        setError(`Please fill in all feature values: ${missingFeatures.join(', ')}`);\n        return;\n      }\n    } else if (model.input_type === 'image' && !file) {\n      setError('Please upload an image file.');\n      return;\n    } else if (model.input_type === 'text' && !text.trim()) {\n      setError('Please enter some text.');\n      return;\n    }\n    try {\n      setPredicting(true);\n      setError(null);\n      setResult(null);\n      let response;\n      if (model.input_type === 'image' && file) {\n        response = await apiClient.predictImage(modelId, file);\n      } else if (model.input_type === 'text' && text) {\n        response = await apiClient.predictText(modelId, text);\n      } else if (model.input_type === 'tabular' && featureKeys.length > 0) {\n        // Ensure all expected features are present before sending\n        const featuresToSend = {};\n        let allFeaturesPresent = true;\n        featureKeys.forEach(key => {\n          if (features[key] !== undefined) {\n            // Attempt basic number conversion, let backend handle detailed validation\n            const num = Number(features[key]);\n            featuresToSend[key] = isNaN(num) ? features[key] : num;\n          } else {\n            allFeaturesPresent = false;\n          }\n        });\n        if (!allFeaturesPresent) {\n          throw new Error(\"Internal error: Not all expected feature values were found.\");\n        }\n        response = await apiClient.predictTabular(modelId, featuresToSend);\n      } else {\n        throw new Error(`Invalid input or model type (${model.input_type}) for prediction`);\n      }\n      setResult(response);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(`Prediction failed: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message || 'Please check input and try again.'}`);\n      console.error('Error making prediction:', err);\n    } finally {\n      setPredicting(false);\n    }\n  };\n\n  // --- UPDATED TABULAR FORM RENDERING ---\n  const renderInputForm = () => {\n    if (!model) return null;\n    switch (model.input_type) {\n      case 'image':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-1 text-center\",\n              children: [previewUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: previewUrl,\n                  alt: \"Preview\",\n                  className: \"mx-auto h-48 sm:h-64 object-contain rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"mx-auto h-12 w-12 text-gray-400\",\n                stroke: \"currentColor\",\n                fill: \"none\",\n                viewBox: \"0 0 48 48\",\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex text-sm text-gray-600 justify-center\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"file-upload\",\n                  className: \"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500 px-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Upload a file\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"file-upload\",\n                    name: \"file-upload\",\n                    type: \"file\",\n                    className: \"sr-only\",\n                    onChange: handleFileChange,\n                    accept: model.supported_formats ? model.supported_formats.map(f => `image/${f}`).join(',') : \"image/*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500\",\n                children: model.supported_formats ? `Supported: ${model.supported_formats.join(', ').toUpperCase()}` : 'Image files'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 mt-2\",\n            children: [\"Selected file: \", file.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this);\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text-input\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Enter Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"text-input\",\n              name: \"text-input\",\n              rows: 6,\n              className: \"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\",\n              placeholder: \"Enter text for analysis...\",\n              value: text,\n              onChange: handleTextChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this);\n      case 'tabular':\n        // Only render if featureKeys has been populated\n        if (featureKeys.length === 0 && !error) {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: \"Loading feature details...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }, this);\n        }\n        if (featureKeys.length === 0 && error) {\n          return null; // Don't render form if there was an error getting features\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Enter Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-3\",\n            children: featureKeys.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: key,\n                className: \"block text-sm font-medium text-gray-700 capitalize\",\n                children: key.replace(/_/g, ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: key,\n                type: \"text\" // Use text initially, number conversion happens on submit\n                ,\n                placeholder: `Enter value for ${key.replace(/_/g, ' ')}`,\n                value: features[key] || '',\n                onChange: e => handleFeatureChange(key, e.target.value),\n                className: \"mt-1 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this);\n      // --- END UPDATE ---\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500\",\n          children: [\"Error: Unsupported model input type '\", model.input_type, \"'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // (renderResult function remains the same as before)\n  const renderResult = () => {\n    if (!result) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 bg-white shadow overflow-hidden sm:rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-5 sm:px-6 bg-green-100 border-b border-green-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg leading-6 font-medium text-green-900\",\n          children: \"Prediction Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 max-w-2xl text-sm text-green-700\",\n          children: [\"Processed in \", result.processing_time.toFixed(3), \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t border-gray-200 px-4 py-5 sm:p-0\",\n        children: /*#__PURE__*/_jsxDEV(\"dl\", {\n          className: \"sm:divide-y sm:divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"Prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n              className: \"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2 font-semibold text-lg\",\n              children: typeof result.prediction === 'number' ? result.prediction.toFixed(4) : result.prediction.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"Confidence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n              className: \"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\",\n              children: typeof result.confidence === 'number' && result.confidence >= 0 && result.confidence <= 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-indigo-600 h-2.5 rounded-full\",\n                    style: {\n                      width: `${result.confidence * 100}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-3 font-medium\",\n                  children: [(result.confidence * 100).toFixed(1), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 20\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500\",\n                children: \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-8\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center py-10\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this) : !model && !error ?\n      /*#__PURE__*/\n      // Should not happen if modelId is present, but handle just in case\n      _jsxDEV(\"p\", {\n        className: \"text-center text-gray-500 py-10\",\n        children: \"Loading model details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 12\n      }, this) : model ?\n      /*#__PURE__*/\n      // Only proceed if model is successfully loaded\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pb-5 border-b border-gray-200 sm:flex sm:items-center sm:justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\",\n              children: \"Make Prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-sm text-gray-500\",\n              children: [\"Using model: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: model.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 34\n              }, this), \" (\", model.id, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 flex sm:mt-0 sm:ml-4\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/models/${model.id}`,\n              className: \"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n              children: \"Model Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"space-y-6\",\n            children: [renderInputForm(), error &&\n            /*#__PURE__*/\n            // Display general errors above the button\n            _jsxDEV(\"div\", {\n              className: \"rounded-md bg-red-50 p-4 my-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-shrink-0\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"h-5 w-5 text-red-400\",\n                    viewBox: \"0 0 20 20\",\n                    fill: \"currentColor\",\n                    \"aria-hidden\": \"true\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      fillRule: \"evenodd\",\n                      d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z\",\n                      clipRule: \"evenodd\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 28\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 26\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"text-sm font-medium text-red-800\",\n                    children: \"Prediction Error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-2 text-sm text-red-700\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: error\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this), model.input_type && featureKeys.length > 0 || model.input_type === 'image' || model.input_type === 'text' ?\n            /*#__PURE__*/\n            // Only show button if form is ready\n            _jsxDEV(\"div\", {\n              className: \"pt-5\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-end\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/models/${model.id}`,\n                  className: \"bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 24\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  disabled: predicting,\n                  className: \"ml-3 inline-flex justify-center items-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\",\n                  children: predicting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                      className: \"animate-spin -ml-1 mr-3 h-5 w-5 text-white\",\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                        className: \"opacity-25\",\n                        cx: \"12\",\n                        cy: \"12\",\n                        r: \"10\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 388,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                        className: \"opacity-75\",\n                        fill: \"currentColor\",\n                        d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 29\n                    }, this), \"Processing...\"]\n                  }, void 0, true) : 'Make Prediction'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), renderResult()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Handle case where model failed to load but no specific error was set in fetch\n      _jsxDEV(\"div\", {\n        className: \"text-center py-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-900\",\n          children: \"Error Loading Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-gray-500\",\n          children: error || \"Could not load model details. Please ensure the backend is running and the model ID is correct.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/models\",\n            className: \"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\",\n            children: \"Back to Models\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictionPage, \"fdnr+9qxnEdaggekGL9h1txi/VI=\", false, function () {\n  return [useParams];\n});\n_c = PredictionPage;\nexport default PredictionPage;\nvar _c;\n$RefreshReg$(_c, \"PredictionPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","apiClient","jsxDEV","_jsxDEV","Fragment","_Fragment","PredictionPage","_s","modelId","model","setModel","loading","setLoading","predicting","setPredicting","error","setError","file","setFile","text","setText","features","setFeatures","featureKeys","setFeatureKeys","result","setResult","previewUrl","setPreviewUrl","fetchModelDetails","data","getModelDetails","input_type","expected_features","length","initialFeatures","forEach","key","console","warn","err","handleFileChange","e","_e$target$files","selectedFile","target","files","type","startsWith","url","URL","createObjectURL","revokeObjectURL","handleTextChange","value","handleFeatureChange","prev","handleSubmit","preventDefault","missingFeatures","filter","undefined","join","trim","response","predictImage","predictText","featuresToSend","allFeaturesPresent","num","Number","isNaN","Error","predictTabular","_err$response","_err$response$data","detail","message","renderInputForm","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","stroke","fill","viewBox","d","strokeWidth","strokeLinecap","strokeLinejoin","htmlFor","id","name","onChange","accept","supported_formats","map","f","toUpperCase","rows","placeholder","replace","renderResult","processing_time","toFixed","prediction","toString","confidence","style","width","to","onSubmit","fillRule","clipRule","disabled","xmlns","cx","cy","r","_c","$RefreshReg$"],"sources":["E:/Courses/DEPI/Technical/Project/Template/src/pages/ModelDetailPage.tsx"],"sourcesContent":["// src/pages/PredictionPage.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport apiClient from '../api/apiClient.ts'; // Make sure extension is included if needed\n\ninterface Model {\n  id: string;\n  name: string;\n  description: string;\n  input_type: string;\n  supported_formats?: string[];\n  expected_features?: string[]; // <-- Added for tabular models\n}\n\ninterface PredictionResponse {\n  prediction: string;\n  confidence: number;\n  processing_time: number;\n}\n\nconst PredictionPage: React.FC = () => {\n  const { modelId } = useParams<{ modelId: string }>();\n  const [model, setModel] = useState<Model | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [predicting, setPredicting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // State for inputs\n  const [file, setFile] = useState<File | null>(null);\n  const [text, setText] = useState<string>('');\n  // Initialize features state as an empty object\n  const [features, setFeatures] = useState<Record<string, any>>({});\n  // Initialize featureKeys state as empty array - will be populated from API\n  const [featureKeys, setFeatureKeys] = useState<string[]>([]);\n  const [result, setResult] = useState<PredictionResponse | null>(null);\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchModelDetails = async () => {\n      if (!modelId) return;\n\n      try {\n        setLoading(true);\n        setError(null); // Clear previous errors\n        setResult(null); // Clear previous results\n        const data: Model = await apiClient.getModelDetails(modelId); // Fetch model details\n        setModel(data);\n\n        // --- UPDATED LOGIC ---\n        // If it's a tabular model and expected_features are provided by API, use them\n        if (data.input_type === 'tabular' && data.expected_features && data.expected_features.length > 0) {\n          setFeatureKeys(data.expected_features); // Set keys from API response\n          // Initialize features state with empty strings for the expected keys\n          const initialFeatures: Record<string, any> = {};\n          data.expected_features.forEach(key => {\n            initialFeatures[key] = ''; // Default to empty string\n          });\n          setFeatures(initialFeatures);\n        } else if (data.input_type === 'tabular') {\n           // Handle case where backend *doesn't* send features for a tabular model\n           console.warn(\"Tabular model details received without expected_features list.\");\n           setError(\"Model details are incomplete. Cannot display feature inputs.\");\n           setFeatureKeys([]); // Ensure no fields are rendered\n           setFeatures({});\n        } else {\n           // Reset for non-tabular models\n           setFeatureKeys([]);\n           setFeatures({});\n        }\n        // --- END UPDATE ---\n\n      } catch (err) {\n        setError('Failed to fetch model details. Please try again later.');\n        console.error('Error fetching model details:', err);\n        setModel(null); // Ensure model is null on error\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchModelDetails();\n  }, [modelId]); // Re-run effect when modelId changes\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files?.[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setResult(null); // Clear previous results\n      if (selectedFile.type.startsWith('image/')) {\n        const url = URL.createObjectURL(selectedFile);\n        setPreviewUrl(url);\n        // Clean up the object URL when the component unmounts or file changes\n        return () => URL.revokeObjectURL(url);\n      } else {\n        setPreviewUrl(null);\n      }\n    }\n  };\n\n  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n    setResult(null); // Clear previous results\n  };\n\n  // Updated handler for tabular features\n  const handleFeatureChange = (key: string, value: string) => {\n    setFeatures(prev => ({\n      ...prev,\n      [key]: value // Keep as string initially, backend will handle conversion if needed\n    }));\n    setResult(null); // Clear previous results\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!model || !modelId) return;\n\n    // Basic validation check\n     if (model.input_type === 'tabular') {\n       const missingFeatures = featureKeys.filter(key => features[key] === undefined || features[key] === '');\n       if (missingFeatures.length > 0) {\n         setError(`Please fill in all feature values: ${missingFeatures.join(', ')}`);\n         return;\n       }\n     } else if (model.input_type === 'image' && !file) {\n       setError('Please upload an image file.');\n       return;\n     } else if (model.input_type === 'text' && !text.trim()) {\n        setError('Please enter some text.');\n        return;\n     }\n\n\n    try {\n      setPredicting(true);\n      setError(null);\n      setResult(null);\n\n      let response;\n\n      if (model.input_type === 'image' && file) {\n        response = await apiClient.predictImage(modelId, file);\n      } else if (model.input_type === 'text' && text) {\n        response = await apiClient.predictText(modelId, text);\n      } else if (model.input_type === 'tabular' && featureKeys.length > 0) {\n         // Ensure all expected features are present before sending\n         const featuresToSend: Record<string, any> = {};\n         let allFeaturesPresent = true;\n         featureKeys.forEach(key => {\n            if (features[key] !== undefined) {\n                // Attempt basic number conversion, let backend handle detailed validation\n                const num = Number(features[key]);\n                featuresToSend[key] = isNaN(num) ? features[key] : num;\n            } else {\n                allFeaturesPresent = false;\n            }\n         });\n\n         if (!allFeaturesPresent) {\n             throw new Error(\"Internal error: Not all expected feature values were found.\");\n         }\n         response = await apiClient.predictTabular(modelId, featuresToSend);\n\n      } else {\n        throw new Error(`Invalid input or model type (${model.input_type}) for prediction`);\n      }\n\n      setResult(response);\n    } catch (err: any) {\n      setError(`Prediction failed: ${err.response?.data?.detail || err.message || 'Please check input and try again.'}`);\n      console.error('Error making prediction:', err);\n    } finally {\n      setPredicting(false);\n    }\n  };\n\n  // --- UPDATED TABULAR FORM RENDERING ---\n  const renderInputForm = () => {\n    if (!model) return null;\n\n    switch (model.input_type) {\n      case 'image':\n        return (\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Upload Image</label>\n            <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n              <div className=\"space-y-1 text-center\">\n                {previewUrl ? (\n                  <div className=\"mb-4\">\n                    <img src={previewUrl} alt=\"Preview\" className=\"mx-auto h-48 sm:h-64 object-contain rounded\" />\n                  </div>\n                ) : (\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\" aria-hidden=\"true\">\n                    <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                  </svg>\n                )}\n                <div className=\"flex text-sm text-gray-600 justify-center\">\n                  <label htmlFor=\"file-upload\" className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500 px-1\">\n                    <span>Upload a file</span>\n                    <input id=\"file-upload\" name=\"file-upload\" type=\"file\" className=\"sr-only\" onChange={handleFileChange} accept={model.supported_formats ? model.supported_formats.map(f => `image/${f}`).join(',') : \"image/*\"} />\n                  </label>\n                  {/* <p className=\"pl-1\">or drag and drop</p> */}\n                </div>\n                <p className=\"text-xs text-gray-500\">\n                  {model.supported_formats\n                    ? `Supported: ${model.supported_formats.join(', ').toUpperCase()}`\n                    : 'Image files'}\n                </p>\n              </div>\n            </div>\n             {file && <p className=\"text-sm text-gray-500 mt-2\">Selected file: {file.name}</p>}\n          </div>\n        );\n\n      case 'text':\n        return (\n          <div>\n            <label htmlFor=\"text-input\" className=\"block text-sm font-medium text-gray-700\">\n              Enter Text\n            </label>\n            <div className=\"mt-1\">\n              <textarea\n                id=\"text-input\"\n                name=\"text-input\"\n                rows={6}\n                className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                placeholder=\"Enter text for analysis...\"\n                value={text}\n                onChange={handleTextChange}\n              />\n            </div>\n          </div>\n        );\n\n      case 'tabular':\n         // Only render if featureKeys has been populated\n         if (featureKeys.length === 0 && !error) {\n             return <p className=\"text-gray-500\">Loading feature details...</p>;\n         }\n         if (featureKeys.length === 0 && error) {\n             return null; // Don't render form if there was an error getting features\n         }\n        return (\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Enter Features\n            </label>\n             {/* Removed Add/Remove buttons */}\n            <div className=\"space-y-3\">\n              {featureKeys.map((key) => (\n                <div key={key}>\n                  <label htmlFor={key} className=\"block text-sm font-medium text-gray-700 capitalize\">{key.replace(/_/g, ' ')}</label> {/* Use feature key as label */}\n                  <input\n                    id={key}\n                    type=\"text\" // Use text initially, number conversion happens on submit\n                    placeholder={`Enter value for ${key.replace(/_/g, ' ')}`}\n                    value={features[key] || ''}\n                    onChange={(e) => handleFeatureChange(key, e.target.value)}\n                    className=\"mt-1 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                    />\n                 </div>\n              ))}\n            </div>\n          </div>\n        );\n      // --- END UPDATE ---\n\n      default:\n        return <p className=\"text-red-500\">Error: Unsupported model input type '{model.input_type}'</p>;\n    }\n  };\n\n  // (renderResult function remains the same as before)\n   const renderResult = () => {\n    if (!result) return null;\n    return (\n      <div className=\"mt-8 bg-white shadow overflow-hidden sm:rounded-lg\">\n        <div className=\"px-4 py-5 sm:px-6 bg-green-100 border-b border-green-200\">\n          <h3 className=\"text-lg leading-6 font-medium text-green-900\">Prediction Result</h3>\n          <p className=\"mt-1 max-w-2xl text-sm text-green-700\">\n            Processed in {result.processing_time.toFixed(3)} seconds\n          </p>\n        </div>\n        <div className=\"border-t border-gray-200 px-4 py-5 sm:p-0\">\n          <dl className=\"sm:divide-y sm:divide-gray-200\">\n            <div className=\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt className=\"text-sm font-medium text-gray-500\">Prediction</dt>\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2 font-semibold text-lg\">\n                {/* Format prediction nicely */}\n                {typeof result.prediction === 'number' ? result.prediction.toFixed(4) : result.prediction.toString()}\n              </dd>\n            </div>\n            <div className=\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n              <dt className=\"text-sm font-medium text-gray-500\">Confidence</dt>\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                {/* Handle potential non-numeric or out-of-range confidence */}\n                {typeof result.confidence === 'number' && result.confidence >= 0 && result.confidence <= 1 ? (\n                   <div className=\"flex items-center\">\n                     <div className=\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n                       <div\n                         className=\"bg-indigo-600 h-2.5 rounded-full\"\n                         style={{ width: `${result.confidence * 100}%` }}\n                       ></div>\n                     </div>\n                     <span className=\"ml-3 font-medium\">{(result.confidence * 100).toFixed(1)}%</span>\n                   </div>\n                 ) : (\n                   <span className=\"text-gray-500\">N/A</span>\n                 )}\n              </dd>\n            </div>\n          </dl>\n        </div>\n      </div>\n    );\n  };\n\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <div className=\"py-8\">\n        {loading ? (\n          <div className=\"flex justify-center py-10\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n          </div>\n        ) : !model && !error ? (\n           // Should not happen if modelId is present, but handle just in case\n           <p className=\"text-center text-gray-500 py-10\">Loading model details...</p>\n        ): model ? ( // Only proceed if model is successfully loaded\n          <div>\n            <div className=\"pb-5 border-b border-gray-200 sm:flex sm:items-center sm:justify-between\">\n               <div>\n                 <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">\n                   Make Prediction\n                 </h2>\n                 <p className=\"mt-1 text-sm text-gray-500\">\n                    Using model: <span className=\"font-medium\">{model.name}</span> ({model.id})\n                 </p>\n               </div>\n              <div className=\"mt-3 flex sm:mt-0 sm:ml-4\">\n                <Link\n                  to={`/models/${model.id}`}\n                  className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  Model Details\n                </Link>\n              </div>\n            </div>\n\n            <div className=\"mt-8\">\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                {renderInputForm()}\n\n                {error && ( // Display general errors above the button\n                  <div className=\"rounded-md bg-red-50 p-4 my-4\">\n                    <div className=\"flex\">\n                      <div className=\"flex-shrink-0\">\n                         <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                           <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z\" clipRule=\"evenodd\" />\n                         </svg>\n                      </div>\n                      <div className=\"ml-3\">\n                        <h3 className=\"text-sm font-medium text-red-800\">Prediction Error</h3>\n                        <div className=\"mt-2 text-sm text-red-700\">\n                          <p>{error}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n\n                {/* Submit Button - placed after input rendering */}\n                {model.input_type && featureKeys.length > 0 || model.input_type === 'image' || model.input_type === 'text' ? ( // Only show button if form is ready\n                  <div className=\"pt-5\">\n                    <div className=\"flex justify-end\">\n                       <Link to={`/models/${model.id}`} className=\"bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                         Cancel\n                       </Link>\n                      <button\n                        type=\"submit\"\n                        disabled={predicting}\n                        className=\"ml-3 inline-flex justify-center items-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        {predicting ? (\n                          <>\n                            <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                            </svg>\n                            Processing...\n                          </>\n                        ) : (\n                          'Make Prediction'\n                        )}\n                      </button>\n                    </div>\n                  </div>\n                ) : null}\n\n              </form>\n            </div>\n\n            {renderResult()}\n\n          </div>\n        ) : ( // Handle case where model failed to load but no specific error was set in fetch\n           <div className=\"text-center py-12\">\n             <h3 className=\"text-lg font-medium text-gray-900\">Error Loading Model</h3>\n             <p className=\"mt-1 text-sm text-gray-500\">\n               {error || \"Could not load model details. Please ensure the backend is running and the model ID is correct.\"}\n             </p>\n             <div className=\"mt-6\">\n               <Link to=\"/models\" className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                 Back to Models\n               </Link>\n             </div>\n           </div>\n         )}\n      </div>\n    </div>\n  );\n};\n\nexport default PredictionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}